name: CI

on: [push, workflow_dispatch]

jobs:
  simulation:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        sim_type: [rtl, gl]   # rtl = cocotb tests, gl = gate-level
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y iverilog python3 python3-pip

      - name: Setup Python (only RTL)
        if: matrix.sim_type == 'rtl'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python packages (only RTL)
        if: matrix.sim_type == 'rtl'
        run: pip install -r test/requirements.txt

      - name: Run ${{ matrix.sim_type }} simulation
        run: |
          cd test
          rm -f ./tb.vvp ./tb.vcd ./results.xml || true

          if [ "${{ matrix.sim_type }}" = "rtl" ]; then
            echo "=== Running RTL simulation ==="
            make clean || true
            make || true
          else
            echo "=== Running GL simulation ==="
            iverilog -o ./tb.vvp tb.v ../src/project.v || true
            vvp ./tb.vvp || true
          fi

          RESULT_FILE=$(find . -name "results.xml" | head -n 1)
          if [ -z "$RESULT_FILE" ]; then
            echo "‚ùå No results.xml found for ${{ matrix.sim_type }} sim."
            ls -R .
            exit 1
          fi

          echo "üìÑ Found results.xml at $RESULT_FILE"
          echo "----- results.xml content -----"
          cat "$RESULT_FILE"
          echo "-------------------------------"

          python3 - <<'EOF'
import sys, xml.etree.ElementTree as ET
f = "${RESULT_FILE}"
try:
    tree = ET.parse(f)
    root = tree.getroot()
    failures = int(root.attrib.get("failures", 0))
    errors = int(root.attrib.get("errors", 0))
    if failures == 0 and errors == 0:
        print("‚úÖ All tests passed (ignoring simulator exit code).")
        sys.exit(0)
    else:
        print(f"‚ùå {failures} failures, {errors} errors found.")
        sys.exit(1)
except Exception as e:
    print(f"‚ö†Ô∏è Could not parse results.xml: {e}")
    sys.exit(1)
EOF

      - name: Test Summary (${{ matrix.sim_type }})
        uses: test-summary/action@v2.3
        with:
          paths: "test/**/*.xml"
        if: always()

      - name: Upload Artifacts (${{ matrix.sim_type }})
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.sim_type }}-artifacts
          path: |
            test/**/*.vcd
            test/**/*.xml
